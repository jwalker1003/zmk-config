/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp F                  &kp P            &kp B             &kp J      &kp L      &kp U    &kp Y  &kp P       &kp SINGLE_QUOTE
&sl 3       &kp A  &kp R  &kp S                  &lt 2 T          &kp G             &kp K      &lt 1 N    &kp E    &kp I  &kp O       &sl 3
&kp LCTRL   &kp Z  &kp X  &kp C                  &kp D            &kp B             &kp COMMA  &kp V      &kp M    &kp H  &kp PERIOD  &kp DOUBLE_QUOTES
                          &mt LEFT_ALT LEFT_WIN  &lt 4 BACKSPACE  &kp LEFT_SHIFT    &kp ENTER  &kp SPACE  &kp TAB
            >;
        };

        f_keys {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &trans  &trans     &trans    &trans         &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &trans  &kp RCTRL  &kp RWIN  &kp RIGHT_ALT  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans     &trans  &trans  &trans     &trans    &trans         &trans
                          &trans  &trans  &trans     &trans  &trans  &trans
            >;
        };

        num_pad {
            bindings = <
&trans  &trans            &trans        &trans        &trans  &trans    &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &bt BT_SEL 0
&trans  &kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &trans  &trans    &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &bt BT_SEL 1
&trans  &trans            &trans        &trans        &trans  &trans    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &bt BT_SEL 2
                                        &trans        &trans  &trans    &trans           &trans           &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp EXCLAMATION       &kp AT_SIGN            &kp HASH        &kp DOLLAR        &kp PERCENT     &kp CARET  &kp AMPERSAND         &kp ASTERISK   &kp MINUS       &kp PLUS   &trans
&trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp QUESTION    &kp PIPE   &kp NON_US_BACKSLASH  &kp SLASH      &kp UNDERSCORE  &kp EQUAL  &trans
&trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN   &kp GREATER_THAN  &trans          &trans     &kp COLON             &kp SEMICOLON  &kp TILDE       &kp GRAVE  &trans
                                                     &trans          &trans            &trans          &trans     &trans                &trans
            >;
        };

        nav_arrow {
            bindings = <
&trans  &trans     &trans        &trans        &trans          &kp HOME         &kp END      &kp HOME           &kp END       &trans        &trans           &bl BL_ON
&trans  &kp LCTRL  &kt LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp PAGE_DOWN    &kp PAGE_UP  &kp LEFT           &kp DOWN      &kp UP_ARROW  &kp RIGHT_ARROW  &bl BL_OFF
&trans  &trans     &trans        &trans        &trans          &trans           &trans       &kp C_VOLUME_DOWN  &kp C_VOL_UP  &bl BL_DEC    &bl BL_INC       &trans
                                 &trans        &trans          &trans           &trans       &trans             &trans
            >;
        };
    };
};
